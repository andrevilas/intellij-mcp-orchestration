name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  security:
    name: Security checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python for secret scanners
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run detect-secrets
        run: bash scripts/secrets-audit.sh

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --report-path gitleaks-report.json --report-format json --config config/gitleaks.toml

      - name: Upload gitleaks report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json
          if-no-files-found: error

  ops_compliance:
    needs: security
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate OPS controls
        run: |
          python3 scripts/ops_controls.py --output docs/evidence/TASK-OPS-302/ops-controls-report.json

      - name: Upload OPS controls report
        uses: actions/upload-artifact@v4
        with:
          name: ops-controls-report
          path: docs/evidence/TASK-OPS-302/ops-controls-report.json
          if-no-files-found: error

  lint:
    needs:
      - security
      - ops_compliance
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Sync secure secrets (if configured)
        if: ${{ secrets.SOPS_AGE_KEY != '' || secrets.VAULT_ADDR != '' }}
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_NAMESPACE: ${{ secrets.VAULT_NAMESPACE }}
          VAULT_SECRET_PATH: ${{ secrets.VAULT_SECRET_PATH }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
          VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
          VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
        run: |
          if [ -n "${SOPS_AGE_KEY:-}" ]; then
            mkdir -p ~/.config/sops/age
            printf "%s\n" "$SOPS_AGE_KEY" > ~/.config/sops/age/keys.txt
            chmod 600 ~/.config/sops/age/keys.txt
          fi
          make secrets-sync
          if [ -n "${SOPS_AGE_KEY:-}" ]; then
            rm -f ~/.config/sops/age/keys.txt
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack (pnpm)
        run: corepack enable

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            server/pyproject.toml
            agents-hub/pyproject.toml

      - name: Install dependencies via Makefile
        run: make install

      - name: Run lint
        run: make lint

  test:
    needs:
      - security
      - ops_compliance
    runs-on: ubuntu-latest
    env:
      AGENTS_ROOT: agents-hub/app/agents
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Sync secure secrets (if configured)
        if: ${{ secrets.SOPS_AGE_KEY != '' || secrets.VAULT_ADDR != '' }}
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_NAMESPACE: ${{ secrets.VAULT_NAMESPACE }}
          VAULT_SECRET_PATH: ${{ secrets.VAULT_SECRET_PATH }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
          VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
          VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
        run: |
          if [ -n "${SOPS_AGE_KEY:-}" ]; then
            mkdir -p ~/.config/sops/age
            printf "%s\n" "$SOPS_AGE_KEY" > ~/.config/sops/age/keys.txt
            chmod 600 ~/.config/sops/age/keys.txt
          fi
          make secrets-sync
          if [ -n "${SOPS_AGE_KEY:-}" ]; then
            rm -f ~/.config/sops/age/keys.txt
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack (pnpm)
        run: corepack enable

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            server/pyproject.toml
            agents-hub/pyproject.toml

      - name: Install dependencies via Makefile
        run: make install

      - name: Run frontend unit tests
        run: pnpm --dir app test

      - name: Run test suite
        id: run-tests
        run: |
          set -o pipefail
          make test 2>&1 | tee pytest.log
        env:
          SKIP_FRONTEND_TESTS: '1'

      - name: Upload pytest log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-log
          path: pytest.log
          if-no-files-found: ignore

  smoke:
    needs:
      - security
      - ops_compliance
    runs-on: ubuntu-latest
    env:
      AGENTS_ROOT: agents-hub/app/agents
      SMOKE_HOST: 127.0.0.1
      SMOKE_PORT: '8000'
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Sync secure secrets (if configured)
        if: ${{ secrets.SOPS_AGE_KEY != '' || secrets.VAULT_ADDR != '' }}
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_NAMESPACE: ${{ secrets.VAULT_NAMESPACE }}
          VAULT_SECRET_PATH: ${{ secrets.VAULT_SECRET_PATH }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
          VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
          VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
        run: |
          if [ -n "${SOPS_AGE_KEY:-}" ]; then
            mkdir -p ~/.config/sops/age
            printf "%s\n" "$SOPS_AGE_KEY" > ~/.config/sops/age/keys.txt
            chmod 600 ~/.config/sops/age/keys.txt
          fi
          make secrets-sync
          if [ -n "${SOPS_AGE_KEY:-}" ]; then
            rm -f ~/.config/sops/age/keys.txt
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack (pnpm)
        run: corepack enable

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            server/pyproject.toml
            agents-hub/pyproject.toml

      - name: Install dependencies via Makefile
        run: make install

      - name: Run smoke tests
        id: run-smoke
        run: |
          set -o pipefail
          make smoke 2>&1 | tee uvicorn.log

      - name: Upload uvicorn log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: uvicorn-log
          path: uvicorn.log
          if-no-files-found: ignore

      - name: Clean previous Playwright smoke artifacts
        run: rm -rf tests/test-results tests/playwright-report playwright-smoke.log || true

      - name: Run Playwright smoke suite
        env:
          PLAYWRIGHT_TRACE: retain-on-failure
          PLAYWRIGHT_VIDEO: retain-on-failure
          CONSOLE_MCP_USE_FIXTURES: force
        run: |
          set -o pipefail
          pnpm --dir tests exec playwright test 2>&1 | tee playwright-smoke.log

      - name: Upload Playwright smoke log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-smoke-log
          path: playwright-smoke.log
          if-no-files-found: ignore

      - name: Upload Playwright smoke artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-smoke-artifacts
          path: |
            tests/test-results
            tests/playwright-report
          if-no-files-found: warn

  playwright:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack (pnpm)
        run: corepack enable

      - name: Install project dependencies
        run: make install

      - name: Install Playwright browsers and deps
        run: pnpm --dir tests exec playwright install --with-deps

      - name: Run Playwright E2E suite
        env:
          PLAYWRIGHT_VIDEO: retain-on-failure
          PLAYWRIGHT_TRACE: retain-on-failure
          CONSOLE_MCP_USE_FIXTURES: force
        run: |
          set -o pipefail
          pnpm --dir tests exec playwright test 2>&1 | tee playwright.log

      - name: Upload Playwright log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-log
          path: playwright.log
          if-no-files-found: ignore

      - name: Upload Playwright traces on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: tests/test-results
          if-no-files-found: ignore

  lighthouse:
    needs:
      - lint
      - test
      - smoke
      - playwright
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack (pnpm)
        run: corepack enable

      - name: Install workspace dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Lighthouse CI suite
        run: pnpm --dir app run lighthouse:ci

      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: docs/evidence/TASK-UI-OBS-082/lighthouse
          if-no-files-found: error
